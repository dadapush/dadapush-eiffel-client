note
 description:"[
		DaDaPush Public API
 		DaDaPush: Real-time Notifications App Send real-time notifications through our API without coding and maintaining your own app for iOS or Android devices.
  		The version of the OpenAPI document: v1
 	    Contact: contacts@dadapush.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class PAGE_RESPONSE_OF_MESSAGE_OBJECT 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    content: detachable LIST [MESSAGE_OBJECT] 
      
    total_elements: INTEGER_64 
      
    total_pages: INTEGER_64 
      

feature -- Change Element  
 
    set_content (a_name: like content)
        -- Set 'content' with 'a_name'.
      do
        content := a_name
      ensure
        content_set: content = a_name		
      end

    set_total_elements (a_name: like total_elements)
        -- Set 'total_elements' with 'a_name'.
      do
        total_elements := a_name
      ensure
        total_elements_set: total_elements = a_name		
      end

    set_total_pages (a_name: like total_pages)
        -- Set 'total_pages' with 'a_name'.
      do
        total_pages := a_name
      ensure
        total_pages_set: total_pages = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass PAGE_RESPONSE_OF_MESSAGE_OBJECT%N")
        if attached content as l_content then
          across l_content as ic loop
            Result.append ("%N content:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached total_elements as l_total_elements then
          Result.append ("%Ntotal_elements:")
          Result.append (l_total_elements.out)
          Result.append ("%N")    
        end  
        if attached total_pages as l_total_pages then
          Result.append ("%Ntotal_pages:")
          Result.append (l_total_pages.out)
          Result.append ("%N")    
        end  
      end
end


