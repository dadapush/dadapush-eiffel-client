note
 description:"[
		DaDaPush Public API
 		DaDaPush: Real-time Notifications App Send real-time notifications through our API without coding and maintaining your own app for iOS or Android devices.
  		The version of the OpenAPI document: v1
 	    Contact: contacts@dadapush.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class MESSAGE_PUSH_REQUEST 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    actions: detachable LIST [ACTION] 
      -- action size range is 0,3
    content: detachable STRING_32 
      -- message content
    need_push: BOOLEAN 
      -- when value is false, will not send client push
    title: detachable STRING_32 
      -- message title

feature -- Change Element  
 
    set_actions (a_name: like actions)
        -- Set 'actions' with 'a_name'.
      do
        actions := a_name
      ensure
        actions_set: actions = a_name		
      end

    set_content (a_name: like content)
        -- Set 'content' with 'a_name'.
      do
        content := a_name
      ensure
        content_set: content = a_name		
      end

    set_need_push (a_name: like need_push)
        -- Set 'need_push' with 'a_name'.
      do
        need_push := a_name
      ensure
        need_push_set: need_push = a_name		
      end

    set_title (a_name: like title)
        -- Set 'title' with 'a_name'.
      do
        title := a_name
      ensure
        title_set: title = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass MESSAGE_PUSH_REQUEST%N")
        if attached actions as l_actions then
          across l_actions as ic loop
            Result.append ("%N actions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached content as l_content then
          Result.append ("%Ncontent:")
          Result.append (l_content.out)
          Result.append ("%N")    
        end  
        if attached need_push as l_need_push then
          Result.append ("%Nneed_push:")
          Result.append (l_need_push.out)
          Result.append ("%N")    
        end  
        if attached title as l_title then
          Result.append ("%Ntitle:")
          Result.append (l_title.out)
          Result.append ("%N")    
        end  
      end
end


